name: CI

on:
  push:
    tags:
      - v*

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: ${{github.ref}}
          draft: false
          prerelease: false
  build:
    needs: create_release
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          os_name: linux
        - os: macos-latest
          os_name: macos
        - os: windows-latest
          os_name: windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache _build folder
        uses: actions/cache@v2
        with:
          path: _build
          key: dune-build
          restore-keys: dune-build

      - name: Set up OCaml
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: 4.11.1

      - name: Install deps
        run: opam install . --deps-only

      - name: Build executable
        run: opam exec -- dune build

      - name: Compress unix executable
        if: matrix.os_name == 'linux' || matrix.os_name == 'macos'
        run: |
          cp _build/default/bin/main.exe comodoro
          tar czf comodoro.tar.gz comodoro

      - name: Compress windows executable
        if: matrix.os_name == 'windows'
        run: |
          copy _build/default/bin/main.exe comodoro.exe
          tar czf comodoro.tar.gz comodoro.exe

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: comodoro.tar.gz
          asset_name: comodoro-${{matrix.os_name}}.tar.gz
          asset_content_type: application/gzip
